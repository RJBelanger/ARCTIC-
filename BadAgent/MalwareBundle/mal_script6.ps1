class Invader{
    
    [int32]$time

    Invader(){}
    # grab user
    [string] grabUser(){
        $unrefineduser = whoami.exe
        $userArr = $unrefineduser -split "\\"
        return $userArr[1]
    }
    # sleep for this amount of time
    sleep([int]$min, [int]$max){
        $this.time = Get-Random -Minimum $min -Maximum $max
        Start-Sleep -Seconds $this.time
    }

    capture_screenshot() {
        try {
            $screenshotPath = "$env:USERPROFILE\Documents\screenshot.png"
            Add-Type -AssemblyName System.Windows.Forms
            $screen = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds
            $bitmap = New-Object System.Drawing.Bitmap $screen.width, $screen.height
            $graphics = [System.Drawing.Graphics]::FromImage($bitmap)
            $graphics.CopyFromScreen($screen.X, $screen.Y, 0, 0, $bitmap.Size)
            $bitmap.Save($screenshotPath, [System.Drawing.Imaging.ImageFormat]::Png)
            $graphics.Dispose()
            $bitmap.Dispose()
        }
        catch {
        }
    }
    exfiltrate_data() {
        try {
            $sourcePath = "$env:USERPROFILE\Documents\.hidden_system_info.txt"
            $destinationPath = "$env:USERPROFILE\Documents\ExfiltratedData"
        
            # Ensure the destination directory exists
            if (-not (Test-Path -Path $destinationPath)) {
                New-Item -ItemType Directory -Path $destinationPath
            }

            # Copy the file to simulate exfiltration (benign action)
            Copy-Item -Path $sourcePath -Destination $destinationPath -Force
        }
        catch {
        }
    }

    # check environment variables
    get_wifi_passwords(){
        try{
            netsh wlan show profiles
        }
        catch{
            "ERROR"
        }

    }

    get_services(){
        try{
            net start
        }
        catch{
            "ERROR"
        }
           
    }


}
# do stuff
$Invade = New-Object -TypeName Invader

$Invade.capture_screenshot()
$Invade.sleep(10,20)
$Invade.exfiltrate_data()
$Invade.sleep(10,20)
$Invade.get_wifi_passwords()
$Invade.sleep(10,20)
$Invade.get_services()


# Logging starts here
# Get VM unique identifier, current time, and script name
$vmID = (Get-WmiObject -Class Win32_ComputerSystem).Name
$currentTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
$scriptName = $MyInvocation.MyCommand.Name

# Define the path for the log file
$logPath = "C:\Users\User1\Desktop\logs\logFile.log"

# Format the log entry
$logEntry = "VM ID: $vmID, Time: $currentTime, Script: $scriptName"

# Write log entry to the log file
Add-Content -Path $logPath -Value $logEntry


Write-Host "Log file saved."